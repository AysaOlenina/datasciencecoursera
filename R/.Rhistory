?Devices
byu()
buy()
info()
bye()
swirl()
with(dataset, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
head(mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = True)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
?hist
dataset("airqualitr")
swirl()
play()
hist(airquality$Ozone)
nxt()
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York
| City")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(pa())
length(par())
names(par())
?par
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality[,airquality$Month == 5]
may <- airquality[,airquality[,"Month" == 5]]
airquality[,"Month" == 5]
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone, col = "blue", pch = 3)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, !May)
notmay <- subset(airquality, Month != 5)
?pch
points(notmay$Wind, notmay$Ozone, col = "blue", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright",pch = c(17. 8), col = c("blue", "red"), legend = c("May", "Other Month"))
legend("topright",pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Month"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other
Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v = median(airquality$Wind, lty = 2, lwd = 2))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1, 2))
plot(airquality$Wind, airquality$Ozone main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1),oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outler = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month), airquality, layout = c(5, 1))
xyplot(Ozone~Wind|Month, airquality, layout = c(5, 1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout = c(2, 1))
v1
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source("plot1.R")
source(paste0(path_to_course, "/", "plot1.R"), local = TRUE)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
swirl()
library(swirl)
swirl()
sample(colors(), 10)
bye()
library(swirl)
swirl()
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPallete(c("red", "blue"))
p1 <- colorRampPalete(c("red", "blue"))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
p1(06)
0xcC
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(19)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0. 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5))
plot(x, y, pch = 19, col = rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
cols
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
qplot(mpg$displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets .~drv)
qplot(displ, hwy, data = mpg, facets . ~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(y = hwy, data = mpg, facets = drv ~ ., binwidth = .0)
2++
qplot(y = hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = lm)
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_with(base_family = "Times")
g + geom_point(aes(color = drv)) + theme_bm(base_family = "Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "1", ylim = c(-3, 3))
plot(myx, myy, type="l", ylim = c(-3, 3))
g <- ggplot(testdata, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim(c(-3, 3)))
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
g <- ggplot(dataset, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_poin()
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size= 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size= 2, color = "black") + labs(x = "Displacement", y = "Hwy Mileage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size= 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = density")
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, shape = cut, color = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facets = .~cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
curpoints <- quantile(diamond$carat, seg(0, 1, length = 4), na.rm = TRUE)
curpoints <- quantile(diamonds$carat, seg(0, 1, length = 4), na.rm = TRUE)
curpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamponds$carat2 <- quantile(diamons$carat, cutpoints)
diamonds$carat2 <- quantile(diamonds$carat, cutpoints)
diamonds$carat2 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_points(alpha = 1/3) + faced_grid(cut~car2)
g + geom_point(alpha = 1/3) + faced_grid(cut~car2)
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
9
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), phc = 3, cex = 2, lwd = 2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
dmist(x, y)
mdist(x, y)
mdist(x, y, cx = cx, cy = cy)
apply(disTmp, disTmp[, 2], which.min)
цршсрюьшт
apply(distTmp, distTmp[, 2], which.min)
apply(distTmp, which.min)
which.min()
which.min(distTmp)
apply(distTmp, 2, which.min)
?apply
?which.min
play()
x <- c(1:4, 0:5, 11)
which.min(x)
c
x
distTmp
which.min(distTmp)
which.min(distTmp[,1])
which.min(distTmp[,2])
nxt()
points(x,y,pch=19,cex=2, col=cols[newClust])
points(cx,cy,pch=19,cex=2, col=cols[newClust])
points(cx,cy,pch=19,cex=2, col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
x
y
play()
cy
y
cx
nxt()
bye()
swirl
swirl()
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(newCx, newCy, pch = 19, cex = 2, col = cols1)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cexx = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col=c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu * diag * t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
play(scale(mat))
play()
scale(mat)
?scale
nxt()
prcomp(scale(mat))
svd1 <- scd(dataMatrix)
svd1 <- svd(dataMatrix)
svd1$v[, 1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[, 1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[, 1] %*% svd1$d[1] %*% svd1$v[1, ]
a1 <- svd1$u[, 1] %*% svd1$d[1] %*% svd1$v
a1 <- svd1$u[,1] %*% svd1$d[1]
a1 <- svd1$u[,1] * svd1$d[1]
a1 <- (svd1$u[, 1] * svd1$d[1]) %*% t(svd1$v[, 1])
myImage(a1)
a2 <- svd1$u[, 1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[, 1:2])
myImage(a2)
a2 <- svd1$u[, 1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5])
myImage(svd1$u[, 1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5]))
myImage(svd1$u[, 1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[, 1:10]))
dim(ssd)
names*ssd[, 562:563]
names(ssd[, 562:563])
table(ssd$subject)
?table
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
?subset
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
?showMe
mdist <- dist(sub[, 1:3])
mdist <- dist(x[, 1:3])
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c = (sub1[, 10:12], maxCon)
mdist <- dist(c = (sub1[, 10:12], maxCon))
mdist <- dist(sub1[, 10:12])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562, 563)], 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562, 563)], 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$center)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot( kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which <- kClust$size==49
walkdown <- which(kClust$size==49)
plot( kClust$centers[laying,1:12], pch = 19, ylab = "Walkdown Cluster")
plot( kClust$centers[Walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
plot( kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
exit()
bye()
swirl()
dim(pm0)
head(po0)
head(pm0)
cnames
strsplit(cnames, '|', fixet = TRUE)
strsplit(cnames, '|', fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
wcol
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
''
?make.names
dim(pm1)
x0 <- pm1$Sample.Value
x0 <- pm0$Sample.Value
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
dates
head(dates)
hist(dates[negative], "month")
str(site0)
?intersect
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & country.site %in% both)
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0[Country.code == 63 & Site.ID == 2008])
pm0sub <- subset(cnt0[,Country.code == 63 & Site.ID == 2008])
pm0sub <- subset(cnt0[,Country.Code == 63 & Site.ID == 2008])
head(cnt0)
pm0sub <- subset(cnt0[,County.Code == 63 & Site.ID == 2008])
pm0sub <- subset(cnt0,County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1,County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0  <- with(pm0, tapply(Sample.Value, State.Code, mean(), na.rm = TRUE))
mn0  <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1  <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[,2], xlim = c(0.5, 2.5)))
with(mrg, points(rep(1, 52), x = mrg[,3])
)
with(mrg, points(rep(2, 52), x = mrg[,3]))
with(mrg, points(rep(2, 52), mrg[,3]))
segment(rep(1, 52), mrg[,2], rep(2, 52), mrg[,3])
segments(rep(1, 52), mrg[,2], rep(2, 52), mrg[,3])
mrg[mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y, ]
?rep
rep(5, 2)
